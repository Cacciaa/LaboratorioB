package client;


import common.*;
import java.io.IOException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import org.xml.sax.SAXException;

/**
 *
 * @author Matteo Cacciarino, 748231, Lorenzo Erba, 748702,Ferialdo Elezi
 * 749721,Alessandro Zancanella 751494, sede CO
 *
 * Classe rappresentante il pannello che visualizza la pagina per l'inserimento
 * dei dati delle emozioni.
 *
 */
public class PannelloEmozioni extends javax.swing.JPanel {

    private String userId; // Attributo contenente l'id utente
    private String titolo; // Attributo contenente il titolo della canzone
    private String autore; // Attributo contenente l'autore della canzone
    private int anno, idPlaylist;
    private EmotionalSongs previousframe; // Frame iniziale
    private InterfacciaServizio is;

    /**
     * Costruttore parametrico che inizializza tutti gli attributi
     *
     * @param idUtente parametro di tipo String contenente l'id dell'utente
     * @param titolo parametro di tipo String, contenente il titolo della
     * canzone
     * @param autore parametro di tipo String, contenente l'autore della canzone
     * @param previousFrame parametro di tipo SchermataPlaylist contenente il
     * riferimento al Frame iniziale
     */
    public PannelloEmozioni(String userId, String titolo, String autore, int anno, EmotionalSongs emo, InterfacciaServizio is, int idPlaylist) {
        initComponents();
        this.userId = userId;
        this.titolo = titolo;
        this.autore = autore;
        this.previousframe = emo; // Frame iniziale
        this.anno = anno;
        this.is=is;
        this.idPlaylist=idPlaylist;
        this.jLblUserId.setText(this.jLblUserId.getText() + this.userId);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        amazementField = new javax.swing.JTextField();
        solemnityField = new javax.swing.JTextField();
        tendernessField = new javax.swing.JTextField();
        powerField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nostalgiaField = new javax.swing.JTextField();
        calmnessField = new javax.swing.JTextField();
        sadnessField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        joyField = new javax.swing.JTextField();
        tensionField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        noteAmazement = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        noteNostalgia = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        noteJoy = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        noteTension = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        noteClamness = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        noteSolemnity = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        noteTenderness = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        notePower = new javax.swing.JTextArea();
        jScrollPane9 = new javax.swing.JScrollPane();
        notrSadness = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLblUserId = new javax.swing.JLabel();

        jLabel2.setText("<html><h3>Amazement</h3></html>");

        jLabel3.setText("<html><h3>Solemnity</h3></html>");

        jLabel4.setText("<html><h3>Tenderness</h3></html>");

        jLabel5.setText("<html><h3>Nostalgia</h3></html>");

        jLabel6.setText("<html><h3>Calmness</h3></html>");

        jLabel7.setText("<html><h3>Power</h3></html>");

        jLabel8.setText("<html><h3>Joy</h3></html>");

        jLabel9.setText("<html><h3>Tension</h3></html>");

        jLabel10.setText("<html><h3>Sadness</h3></html>");

        jButton1.setText("<html> <h3> Carica recensione");
        jButton1.setToolTipText("");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 204, 0), 2));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        noteAmazement.setColumns(20);
        noteAmazement.setRows(5);
        noteAmazement.setToolTipText("");
        jScrollPane1.setViewportView(noteAmazement);

        noteNostalgia.setColumns(20);
        noteNostalgia.setRows(5);
        jScrollPane2.setViewportView(noteNostalgia);

        noteJoy.setColumns(20);
        noteJoy.setRows(5);
        jScrollPane3.setViewportView(noteJoy);

        noteTension.setColumns(20);
        noteTension.setRows(5);
        jScrollPane4.setViewportView(noteTension);

        noteClamness.setColumns(20);
        noteClamness.setRows(5);
        jScrollPane5.setViewportView(noteClamness);

        noteSolemnity.setColumns(20);
        noteSolemnity.setRows(5);
        jScrollPane6.setViewportView(noteSolemnity);

        noteTenderness.setColumns(20);
        noteTenderness.setRows(5);
        jScrollPane7.setViewportView(noteTenderness);

        notePower.setColumns(20);
        notePower.setRows(5);
        jScrollPane8.setViewportView(notePower);

        notrSadness.setColumns(20);
        notrSadness.setRows(5);
        jScrollPane9.setViewportView(notrSadness);

        jLabel14.setText("Note:");

        jLabel15.setText("Note:");

        jLabel16.setText("Note:");

        jLabel17.setText("Note:");

        jLabel18.setText("Note:");

        jLabel19.setText("Note:");

        jLabel20.setText("Note:");

        jLabel21.setText("Note:");

        jLabel22.setText("Note:");

        jLabel23.setText("<html> <h1 style=\"color:green;\"><u>Recensione del brano</h1></html>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(solemnityField)
                        .addComponent(tendernessField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(amazementField)
                        .addComponent(jLabel2))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel17)
                    .addComponent(jLabel19))
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel7)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(calmnessField)
                                .addComponent(powerField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(94, 94, 94)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tensionField)
                                        .addComponent(sadnessField, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(288, 288, 288)
                                .addComponent(jLabel22))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nostalgiaField, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16))
                                .addGap(94, 94, 94)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(joyField, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15))))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLblUserId)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(486, 486, 486))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLblUserId)))
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(amazementField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(joyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(nostalgiaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(solemnityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tendernessField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(calmnessField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(powerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(tensionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(32, 32, 32)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sadnessField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Evento che viene eseguito una volta premuto il bottone della schermata

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        int amazement, solemnity, tenderness, nostalgia, calmness, power, joy, tension, sadness; // Variabili che conterranno tutti i voti delle emozioni
        String noteAmazementVar, noteSolemnityVar, noteTendernessVar, noteNostalgiaVar, noteCalmnessVar, notePowerVar, noteJoyVar, noteTensionVar, noteSadnessVar; // Variabili che conterranno le note delle emozioni

        // Condizione che controlla se il voto è un numero
        if (!isNumeric(amazementField.getText()) || !isNumeric(solemnityField.getText()) || !isNumeric(tendernessField.getText()) || !isNumeric(nostalgiaField.getText()) || !isNumeric(calmnessField.getText()) || !isNumeric(powerField.getText()) || !isNumeric(joyField.getText()) || !isNumeric(tensionField.getText()) || !isNumeric(sadnessField.getText())) {

            // NON SONO DEI NUMERI
            JOptionPane.showMessageDialog(null, "Compila il campo correttamente", "Errore", JOptionPane.ERROR_MESSAGE);

        } else {

            // SONO DEI NUMERI, SE NON HA INSERITO NULLA, SETTO A 0
            if (!amazementField.getText().isEmpty()) {
                amazement = Integer.parseInt(amazementField.getText());
            } else {
                amazement = 0;
            }
            if (!solemnityField.getText().isEmpty()) {
                solemnity = Integer.parseInt(solemnityField.getText());
            } else {
                solemnity = 0;
            }
            if (!tendernessField.getText().isEmpty()) {
                tenderness = Integer.parseInt(tendernessField.getText());
            } else {
                tenderness = 0;
            }
            if (!nostalgiaField.getText().isEmpty()) {
                nostalgia = Integer.parseInt(nostalgiaField.getText());
            } else {
                nostalgia = 0;
            }
            if (!calmnessField.getText().isEmpty()) {
                calmness = Integer.parseInt(calmnessField.getText());
            } else {
                calmness = 0;
            }
            if (!powerField.getText().isEmpty()) {
                power = Integer.parseInt(powerField.getText());
            } else {
                power = 0;
            }
            if (!joyField.getText().isEmpty()) {
                joy = Integer.parseInt(joyField.getText());
            } else {
                joy = 0;
            }
            if (!tensionField.getText().isEmpty()) {
                tension = Integer.parseInt(tensionField.getText());
            } else {
                tension = 0;
            }
            if (!sadnessField.getText().isEmpty()) {
                sadness = Integer.parseInt(sadnessField.getText());
            } else {
                sadness = 0;
            }

            // Controllo se il voto è compreso nei valori ammessi
            if ((amazement < 0 || amazement > 5) || (solemnity < 0 || solemnity > 5) || (tenderness < 0 || tenderness > 5) || (nostalgia < 0 || nostalgia > 5) || (calmness < 0 || calmness > 5) || (power < 0 || power > 5) || (joy < 0 || joy > 5) || (tension < 0 || tension > 5) || (sadness < 0 || sadness > 5)) {

                // NON SONO COMPRESI NEL RANGE CORRETTO
                JOptionPane.showMessageDialog(null, "Compila il campo correttamente, range errato", "Errore", JOptionPane.ERROR_MESSAGE);

            } else {

                // Controllo se le note sono vuote, se sono vuote metto uno spazio, altrimenti la scrittura dell'XML da problemi
                if (!noteAmazement.getText().isEmpty()) {
                    noteAmazementVar = noteAmazement.getText();
                } else {
                    noteAmazementVar = " ";
                }
                if (!noteSolemnity.getText().isEmpty()) {
                    noteSolemnityVar = noteSolemnity.getText();
                } else {
                    noteSolemnityVar = " ";
                }
                if (!noteTenderness.getText().isEmpty()) {
                    noteTendernessVar = noteTenderness.getText();
                } else {
                    noteTendernessVar = " ";
                }
                if (!noteNostalgia.getText().isEmpty()) {
                    noteNostalgiaVar = noteNostalgia.getText();
                } else {
                    noteNostalgiaVar = " ";
                }
                if (!noteClamness.getText().isEmpty()) {
                    noteCalmnessVar = noteClamness.getText();
                } else {
                    noteCalmnessVar = " ";
                }
                if (!notePower.getText().isEmpty()) {
                    notePowerVar = notePower.getText();
                } else {
                    notePowerVar = " ";
                }
                if (!noteJoy.getText().isEmpty()) {
                    noteJoyVar = noteJoy.getText();
                } else {
                    noteJoyVar = " ";
                }
                if (!noteTension.getText().isEmpty()) {
                    noteTensionVar = noteTension.getText();
                } else {
                    noteTensionVar = " ";
                }
                if (!notrSadness.getText().isEmpty()) {
                    noteSadnessVar = notrSadness.getText();
                } else {
                    noteSadnessVar = " ";
                }
                //creo l'oggetto con le emozioni
                EmozioniCanzone emozioniCanzone = new EmozioniCanzone(1, titolo, autore, anno, userId, 
                                amazement, nostalgia, calmness, power, joy, tension, sadness, tenderness, solemnity, 
                        noteAmazementVar, noteNostalgiaVar, noteCalmnessVar, notePowerVar, noteJoyVar, 
                            noteTensionVar, noteSadnessVar, noteTendernessVar, noteSolemnityVar);
               
                Canzoni canzone = carcaCanzone(idPlaylist, titolo,autore,anno);
                if(canzone != null) 
                    JOptionPane.showMessageDialog(null, "errore", "Errore", JOptionPane.ERROR_MESSAGE); // Output errore
                else
                    inserisciEmozioniBrano(canzone,emozioniCanzone);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Metodo che controlla se la variabile passata è un numerico
     *
     * @param str parametro di tipo String contenente la variabile da
     * controllare
     */
    private static boolean isNumeric(String str) {

        if (str.isEmpty()) {
            // Se è vuota torna true, serve per poi poterle settare a 0
            return true;
        } else {
            try {
                // Se riesce a parsarla ad int, vuol dire che è un numerico
                Integer.parseInt(str);
                return true;
            } catch (NumberFormatException e) {
                return false;
            }
        }
    }
    
    private Canzoni carcaCanzone(int idPlaylist, String titolo, String autore, int anno) {
        Canzoni canzone=null;
        ArrayList<Canzoni> listaCanzoni = null;
        
        try {
            listaCanzoni = is.getCanzoniFromPlaylist(idPlaylist);
        } catch (MyServerException ex) {
            JOptionPane.showMessageDialog(null, "error", "Errore", JOptionPane.ERROR_MESSAGE); // Output errore
        } catch (CanzoneInesistente ex) {
            JOptionPane.showMessageDialog(null, "canzone insesistente", "Errore", JOptionPane.ERROR_MESSAGE); // Output errore
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(null, "error", "Errore", JOptionPane.ERROR_MESSAGE); // Output errore
        }
        for (int i = 0; i < listaCanzoni.size(); i++) {
            if(titolo.equals(listaCanzoni.get(i).getTitolo()) && autore.equals(listaCanzoni.get(i).getAutore()) && anno==listaCanzoni.get(i).getAnno() ){
                return listaCanzoni.get(i);
            }
        }
        return canzone;
    }

    /**
     * Metodo per l'inserimento delle nuove emozioni inserite dall'utente nel
     * file XML
     *
     * @param emozioni_lst parametro di tipo Emozione_Collection contenente le
     * nuove emozioni prelevate
     */
    private void inserisciEmozioniBrano(Canzoni canzone, EmozioniCanzone emozioniCanzone) {

        try {
            is.inserisciEmozione(canzone, userId, emozioniCanzone);
            JOptionPane.showMessageDialog(null, "Emozioni registrate correttamente", "Tutto OK!", JOptionPane.INFORMATION_MESSAGE); // Output tutto ok
            this.previousframe.remove(this);
        }  catch (DatiNonValidi ex) {
            JOptionPane.showMessageDialog(null, "dati non validi", "Errore", JOptionPane.ERROR_MESSAGE); // Output errore
        } catch (ChiaveDuplicata ex) {
            JOptionPane.showMessageDialog(null, "chiave duplicata", "Errore", JOptionPane.ERROR_MESSAGE); // Output errore
        } catch (MyServerException |RemoteException ex) {
            JOptionPane.showMessageDialog(null, "false", "Errore", JOptionPane.ERROR_MESSAGE); // Output errore
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amazementField;
    private javax.swing.JTextField calmnessField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLblUserId;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField joyField;
    private javax.swing.JTextField nostalgiaField;
    private javax.swing.JTextArea noteAmazement;
    private javax.swing.JTextArea noteClamness;
    private javax.swing.JTextArea noteJoy;
    private javax.swing.JTextArea noteNostalgia;
    private javax.swing.JTextArea notePower;
    private javax.swing.JTextArea noteSolemnity;
    private javax.swing.JTextArea noteTenderness;
    private javax.swing.JTextArea noteTension;
    private javax.swing.JTextArea notrSadness;
    private javax.swing.JTextField powerField;
    private javax.swing.JTextField sadnessField;
    private javax.swing.JTextField solemnityField;
    private javax.swing.JTextField tendernessField;
    private javax.swing.JTextField tensionField;
    // End of variables declaration//GEN-END:variables
   
}
